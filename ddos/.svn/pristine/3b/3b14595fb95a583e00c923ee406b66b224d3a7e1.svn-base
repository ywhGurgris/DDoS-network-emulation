package edu.cust.target;

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.nio.charset.StandardCharsets;
import java.util.LinkedList;
import java.util.Map;

import com.google.gson.Gson;

public class Main {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int n = args.length;
		if(n != 3) {
			System.out.println("Must enter 3 parameters: server IP, server port, and local IP");
			return;
		}
		LinkedList<String> backlogQueue = new LinkedList<>();
		new StatisticsThread(args[0], args[1], args[2], backlogQueue).start();
		//LinkedHashMap<long[], Long> queue = new LinkedHashMap<>();
		//new Thread(new BacklogMonitor(queue)).start();
		ProtectThread pt = new ProtectThread(args[0], args[1], backlogQueue);
		pt.start();
		try (DatagramSocket ds = new DatagramSocket(8888)) {
			
			for (;;) { // 无限循环
				// 数据缓冲区:
				byte[] buffer = new byte[4096];
				DatagramPacket packet = new DatagramPacket(buffer, buffer.length);
				try {
					ds.receive(packet); // 收取一个UDP数据包
					// 收取到的数据存储在buffer中，由packet.getOffset(), packet.getLength()指定起始位置和长度
					// 将其按UTF-8编码转换为String:
					String data = new String(packet.getData(), packet.getOffset(), packet.getLength(), StandardCharsets.UTF_8);
					Map<?,?> obj = new Gson().fromJson(data, Map.class);
					boolean protect = (Boolean) obj.get("protect");
					System.out.println("protect: " + protect);
					if(protect) {
						int backlogDuration = ((Double) obj.get("backlogDuration")).intValue();
						pt.on(backlogDuration);
					}else {
						pt.off();
					}
				}catch(IOException ex) {
					ex.printStackTrace();
				}
			}
		}catch(IOException ex) {
			ex.printStackTrace();
		}
	}

}
